[{"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\index.js":"1","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\App.js":"2","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TodoList.js":"4","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\Card.js":"5","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\CreateTask.js":"6","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\EditTask.js":"7","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TaskDetails.js":"8"},{"size":500,"mtime":1619208138000,"results":"9","hashOfConfig":"10"},{"size":613,"mtime":1634061228664,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1619208138000,"results":"12","hashOfConfig":"10"},{"size":1784,"mtime":1634062836766,"results":"13","hashOfConfig":"10"},{"size":2476,"mtime":1634063006841,"results":"14","hashOfConfig":"10"},{"size":2744,"mtime":1634061055040,"results":"15","hashOfConfig":"10"},{"size":2503,"mtime":1634056040728,"results":"16","hashOfConfig":"10"},{"size":120,"mtime":1634058162795,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1mew7xu",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\index.js",[],["38","39"],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\App.js",["40"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport TaskDetails from \"./components/TaskDetails\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={TodoList} />\n          <Route exact path=\"/taskdetails/:id\" component={TaskDetails} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TodoList.js",[],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\Card.js",[],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\CreateTask.js",["41"],"import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\";\nconst CreateTaskPopup = ({ modal, toggle, save }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const { name, value } = e.target;\n\n    setTaskName(value);\n  };\n  const handleDescriptionChange = (e) => {\n    console.log(\"value\", e);\n    setDescription(e);\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    let taskObj = { id: Math.random().toString(36).slice(4) };\n    taskObj[\"Name\"] = taskName;\n    taskObj[\"Description\"] = description;\n    console.log(taskObj);\n    save(taskObj);\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Task Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleNameChange}\n            name=\"taskName\"\n          />\n          {/* <SunEditor\n          //   onChange={handleChange}\n          //   className=\"form-control\"\n          //   setContents={taskName}\n          //   setOptions={{\n          //     buttonList: [\n          //       [\"bold\", \"italic\", \"strike\", \"list\", \"align\", \"fontSize\"],\n          //     ],\n          //   }}\n          // /> */}\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          {/* <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            value={description}\n            onChange={handleDescriptionChange}\n            name=\"description\"\n          ></textarea> */}\n\n          <SunEditor\n            rows=\"5\"\n            onChange={handleDescriptionChange}\n            className=\"form-control\"\n            setContents={description}\n            name=\"description\"\n            setOptions={{\n              buttonList: [\n                [\n                  \"bold\",\n\n                  \"italic\",\n                  \"strike\",\n                  \"list\",\n                  \"align\",\n                  \"fontSize\",\n\n                  \"image\",\n                  \"audio\",\n                  \"link\",\n                ],\n              ],\n            }}\n          />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleSave}>\n          Create\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default CreateTaskPopup;\n","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\EditTask.js",["42","43"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\";\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const { name, value } = e.target;\n\n    setTaskName(value);\n  };\n  const handleDescriptionChange = (e) => {\n    console.log(\"value\", e);\n    setDescription(e);\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    updateTask(tempObj);\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Task Name</label>\n          {/* <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/> */}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleNameChange}\n            name=\"taskName\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          {/* <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea> */}\n          <SunEditor\n            rows=\"5\"\n            onChange={handleDescriptionChange}\n            className=\"form-control\"\n            setContents={description}\n            name=\"description\"\n            setOptions={{\n              buttonList: [\n                [\n                  \"bold\",\n\n                  \"italic\",\n                  \"strike\",\n                  \"list\",\n                  \"align\",\n                  \"fontSize\",\n\n                  \"image\",\n                  \"audio\",\n                ],\n              ],\n            }}\n          />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TaskDetails.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":11,"column":13,"nodeType":"50","messageId":"51","endLine":11,"endColumn":17},{"ruleId":"48","severity":1,"message":"52","line":10,"column":13,"nodeType":"50","messageId":"51","endLine":10,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":22,"column":6,"nodeType":"55","endLine":22,"endColumn":8,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"62","text":"63"},[694,696],"[taskObj.Description, taskObj.Name]"]