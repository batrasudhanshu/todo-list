[{"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\index.js":"1","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\App.js":"2","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TodoList.js":"4","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\Card.js":"5","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\CreateTask.js":"6","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\EditTask.js":"7","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TaskDetails.js":"8"},{"size":500,"mtime":1619208138000,"results":"9","hashOfConfig":"10"},{"size":613,"mtime":1634066062135,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1619208138000,"results":"12","hashOfConfig":"10"},{"size":1784,"mtime":1634062836766,"results":"13","hashOfConfig":"10"},{"size":2498,"mtime":1634066186924,"results":"14","hashOfConfig":"10"},{"size":2744,"mtime":1634061055040,"results":"15","hashOfConfig":"10"},{"size":2503,"mtime":1634056040728,"results":"16","hashOfConfig":"10"},{"size":538,"mtime":1634067167861,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1mew7xu",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\index.js",[],["37","38"],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\App.js",["39"],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TodoList.js",[],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\Card.js",[],"C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\CreateTask.js",["40"],"import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport SunEditor from \"suneditor-react\";\n\nimport \"suneditor/dist/css/suneditor.min.css\";\nconst CreateTaskPopup = ({ modal, toggle, save }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const { name, value } = e.target;\n\n    setTaskName(value);\n  };\n  const handleDescriptionChange = (e) => {\n    console.log(\"value\", e);\n    setDescription(e);\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    let taskObj = { id: Math.random().toString(36).slice(4) };\n    taskObj[\"Name\"] = taskName;\n    taskObj[\"Description\"] = description;\n    console.log(taskObj);\n    save(taskObj);\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Task Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleNameChange}\n            name=\"taskName\"\n          />\n          {/* <SunEditor\n          //   onChange={handleChange}\n          //   className=\"form-control\"\n          //   setContents={taskName}\n          //   setOptions={{\n          //     buttonList: [\n          //       [\"bold\", \"italic\", \"strike\", \"list\", \"align\", \"fontSize\"],\n          //     ],\n          //   }}\n          // /> */}\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          {/* <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            value={description}\n            onChange={handleDescriptionChange}\n            name=\"description\"\n          ></textarea> */}\n\n          <SunEditor\n            rows=\"5\"\n            onChange={handleDescriptionChange}\n            className=\"form-control\"\n            setContents={description}\n            name=\"description\"\n            setOptions={{\n              buttonList: [\n                [\n                  \"bold\",\n\n                  \"italic\",\n                  \"strike\",\n                  \"list\",\n                  \"align\",\n                  \"fontSize\",\n\n                  \"image\",\n                  \"audio\",\n                  \"link\",\n                ],\n              ],\n            }}\n          />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleSave}>\n          Create\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default CreateTaskPopup;\n","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\modals\\EditTask.js",["41","42"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\";\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const { name, value } = e.target;\n\n    setTaskName(value);\n  };\n  const handleDescriptionChange = (e) => {\n    console.log(\"value\", e);\n    setDescription(e);\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    updateTask(tempObj);\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Task Name</label>\n          {/* <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/> */}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleNameChange}\n            name=\"taskName\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          {/* <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea> */}\n          <SunEditor\n            rows=\"5\"\n            onChange={handleDescriptionChange}\n            className=\"form-control\"\n            setContents={description}\n            name=\"description\"\n            setOptions={{\n              buttonList: [\n                [\n                  \"bold\",\n\n                  \"italic\",\n                  \"strike\",\n                  \"list\",\n                  \"align\",\n                  \"fontSize\",\n\n                  \"image\",\n                  \"audio\",\n                ],\n              ],\n            }}\n          />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n","C:\\Users\\Admin\\Downloads\\React-todo-list-master\\todo-list\\src\\components\\TaskDetails.js",["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":11,"column":13,"nodeType":"51","messageId":"52","endLine":11,"endColumn":17},{"ruleId":"49","severity":1,"message":"53","line":10,"column":13,"nodeType":"51","messageId":"52","endLine":10,"endColumn":17},{"ruleId":"54","severity":1,"message":"55","line":22,"column":6,"nodeType":"56","endLine":22,"endColumn":8,"suggestions":"57"},{"ruleId":"49","severity":1,"message":"58","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":18},{"ruleId":"54","severity":1,"message":"59","line":16,"column":6,"nodeType":"56","endLine":16,"endColumn":8,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["63"],"'taskInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"69","text":"70"},"Update the dependencies array to be: [props.match.params.id]",{"range":"71","text":"72"},[694,696],"[taskObj.Description, taskObj.Name]",[418,420],"[props.match.params.id]"]